[{"C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\index.js":"1","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\App.js":"2","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\reportWebVitals.js":"3","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\models\\UserObj.js":"4","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\pages\\HomePage\\HomePage.js":"5","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\components\\NavBar\\AppNavbar.js":"6","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\pages\\ProfilePage\\ProfilePage.js":"7","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\pages\\DatesPage\\DatesPage.js":"8","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\pages\\UserHomePage\\UserHomePage.js":"9","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\pages\\LoginPage\\LoginPage.js":"10","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\components\\Calendar\\Calendar.js":"11","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\models\\DateObj.js":"12","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\components\\Calendar\\Weekday.js":"13","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\components\\Calendar\\Day.js":"14","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\components\\Calendar\\Navigation.js":"15"},{"size":782,"mtime":1610570527293,"results":"16","hashOfConfig":"17"},{"size":1847,"mtime":1610888127135,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":349,"mtime":1610570128270,"results":"20","hashOfConfig":"17"},{"size":439,"mtime":1610879045731,"results":"21","hashOfConfig":"17"},{"size":921,"mtime":1610879325356,"results":"22","hashOfConfig":"17"},{"size":4335,"mtime":1610887597326,"results":"23","hashOfConfig":"17"},{"size":1867,"mtime":1610888679820,"results":"24","hashOfConfig":"17"},{"size":3793,"mtime":1611007330927,"results":"25","hashOfConfig":"17"},{"size":2378,"mtime":1610879939170,"results":"26","hashOfConfig":"17"},{"size":512,"mtime":1610886846591,"results":"27","hashOfConfig":"17"},{"size":375,"mtime":1610880505167,"results":"28","hashOfConfig":"17"},{"size":194,"mtime":1610918199807,"results":"29","hashOfConfig":"17"},{"size":1011,"mtime":1610918582868,"results":"30","hashOfConfig":"17"},{"size":1925,"mtime":1611006536636,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ve5nfx",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\index.js",[],["68","69"],"C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\App.js",[],"C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\reportWebVitals.js",[],"C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\models\\UserObj.js",[],"C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\pages\\HomePage\\HomePage.js",[],"C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\components\\NavBar\\AppNavbar.js",[],"C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\pages\\ProfilePage\\ProfilePage.js",["70","71","72"],"import { useState } from \"react\";\r\nimport './ProfilePage.css';\r\nimport { Button, Container, Form, Jumbotron } from \"react-bootstrap\";\r\nimport AppNavbar from \"../../components/NavBar/AppNavbar\";\r\nimport Parse from 'parse';\r\nimport UserObj from \"../../models/UserObj\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction ProfilePage(props){\r\n\r\n    const {activeUser} = props;\r\n\r\n    const [userEmail,setUserEmail] = useState(activeUser.email);\r\n    const [userFName, setUserFName] = useState(activeUser.fname);\r\n    const [userLName, setUserLName] = useState(activeUser.lname);\r\n    const [userPswd, setUserPswd] = useState(activeUser.pswd);\r\n\r\n        \r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    const userName = activeUser.username;\r\n\r\n    const User = new Parse.User();\r\n    const query = new Parse.Query(User);\r\n\r\n    async function UpdateUser() {\r\n        query.get('Atuj4sdpeT').then((user) => {\r\n            // Updates the data we want\r\n            user.set('email', userEmail);\r\n            user.set('password', userPswd);\r\n            user.set('lname', userFName);\r\n            user.set('fname', userLName);\r\n            // Saves the user with the updated data\r\n            user.save().then((response) => {\r\n              if (typeof document !== 'undefined') document.write(`Updated user: ${JSON.stringify(response)}`);\r\n              console.log('Updated user', response);\r\n            }).catch((error) => {\r\n              if (typeof document !== 'undefined') document.write(`Error while updating user: ${JSON.stringify(error)}`);\r\n              console.error('Error while updating user', error);\r\n            });\r\n          });\r\n    }\r\n\r\n    return(\r\n        <div className=\"profile-pg\">\r\n            <Container>\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicUserName\">\r\n                        <Form.Label>User name:</Form.Label>\r\n                        <Form.Control value={userName} type=\"email\" placeholder=\"Enter email\" disabled/>\r\n                        <Form.Text className=\"text-muted\">\r\n                        User name cannot be changed. \r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control value={userEmail} type=\"email\" placeholder=\"Enter email\" onChange={(e) => setUserEmail(e.target.value)} />\r\n                        <Form.Text className=\"text-muted\">\r\n                        Note that if you change your email address you will be logged out.\r\n                        </Form.Text>\r\n                        <Form.Text className=\"text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control value={userPswd} type=\"password\" placeholder=\"Password\" onChange={(e) => setUserPswd(e.target.value)}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicFName\">\r\n                        <Form.Label>First name</Form.Label>\r\n                        <Form.Control value={userFName} type=\"text\" placeholder=\"Enter email\" onChange={(e) => setUserFName(e.target.value)} />\r\n                        <Form.Text className=\"text-muted\">\r\n                        Change your first name.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicLName\">\r\n                        <Form.Label>Last name</Form.Label>\r\n                        <Form.Control value={userLName} type=\"text\" placeholder=\"Enter email\" onChange={(e) => setUserLName(e.target.value)} />\r\n                        <Form.Text className=\"text-muted\">\r\n                        Change your last name.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"button\" onClick={()=> UpdateUser()}>\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\pages\\DatesPage\\DatesPage.js",["73","74","75"],"import { Container, Jumbotron, Table } from \"react-bootstrap\";\r\nimport AppNavbar from \"../../components/NavBar/AppNavbar\";\r\nimport Parse from 'parse';\r\nimport './DatesPage.css';\r\nimport DateObj from \"../../models/DateObj\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction DatesPage(props){\r\n\r\n    const {activeUser} = props;\r\n    const [userDates,setUserDates] =useState([]);\r\n\r\n    const date = Parse.Object.extend('date');\r\n    const query = new Parse.Query(date);\r\n    let dates = [];\r\n\r\n    useEffect(() => {\r\n        readDates();\r\n    },[]);\r\n\r\n    \r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    function readDates() {\r\n        query.equalTo(\"userId\", Parse.User.current());\r\n        query.find().then((results) => {\r\n            // You can use the \"get\" method to get the value of an attribute\r\n            // Ex: response.get(\"<ATTRIBUTE_NAME>\")\r\n            dates = results.map(result => new DateObj(result));\r\n            setUserDates(dates.map(date => <tr><td>{date.getDate()}</td><td>{date.getMonth()}</td><td>{date.getFullYear()}</td></tr>));\r\n            console.log(results);\r\n        }, (error) => {\r\n            console.error('Error while fetching date', error);\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"dates-pg\">\r\n            <Container>\r\n            <Table striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>יום</th>\r\n                        <th>חודש</th>\r\n                        <th>שנה</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {userDates}\r\n                </tbody>\r\n                </Table>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DatesPage;","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\pages\\UserHomePage\\UserHomePage.js",["76","77","78","79","80","81","82"],"C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\pages\\LoginPage\\LoginPage.js",["83","84","85","86"],"import { useState } from \"react\";\r\nimport './LoginPage.css';\r\nimport { Button, Container, Form, Jumbotron } from \"react-bootstrap\";\r\nimport AppNavbar from \"../../components/NavBar/AppNavbar\";\r\nimport UserObj from \"../../models/UserObj\";\r\nimport Parse from 'parse';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nfunction LoginPage(props) {\r\n\r\n    const {activeUser, onLogin, onLogout} = props;\r\n    const [userEmail, setUserEmail] = useState(\"\");\r\n    const [userPswd, setUserPswd] = useState(\"\");\r\n    const [redirecTo, setRedirecTo] = useState(false);\r\n\r\n    async function UserLogin(){\r\n\r\n        try {\r\n            const parseUser = await Parse.User.logIn(userEmail, userPswd);\r\n            // Trigger onLogin event prop + update redirect state so we will redirect to recipes page\r\n            onLogin(new UserObj(parseUser));\r\n            setRedirecTo(true);\r\n        } catch(error) {\r\n            // show an error alert\r\n            alert('Error while logging in user', error);\r\n        }\r\n\r\n    }\r\n\r\n    if (redirecTo)\r\n        return <Redirect to=\"/\"/>\r\n\r\n    return(\r\n        <div className=\"login-pg\">\r\n            <Container>\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control value={userEmail} type=\"email\" placeholder=\"Enter email\" onChange={(e) => setUserEmail(e.target.value)} />\r\n                        <Form.Text className=\"text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control value={userPswd} type=\"password\" placeholder=\"Password\" onChange={(e) => setUserPswd(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"button\" onClick={()=> UserLogin()}>\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\components\\Calendar\\Calendar.js",["87"],"import { useState } from \"react\";\r\nimport RCalendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport Hebcal from 'hebcal';\r\n\r\n\r\nfunction Calendar(){\r\n\r\n    const [value, onChange] = useState(new Date());\r\n    // the rest of your code\r\n\r\n    return(\r\n        <div>\r\n            <RCalendar\r\n            onChange={onChange}\r\n            value={value}\r\n            calendarType={\"Hebrew\"}\r\n            locale ={\"he-He\"}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calendar;","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\models\\DateObj.js",[],"C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\components\\Calendar\\Weekday.js",[],"C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\components\\Calendar\\Day.js",["88","89","90"],"import * as React from 'react';\r\nimport { JewishDay, BasicJewishDay, convertToHebrew, JewishDate, IsJewishDatesEqual } from 'jewish-dates-core';\r\n\r\n\r\nfunction Day(props) {\r\n    \r\n\r\n    const handleClick = () => {\r\n        const { isHebrew, selectedDay, isCurrentMonth, day, dayjsDate, ...basicJewishDay } = props;\r\n        props?.onClick(basicJewishDay);\r\n    };\r\n\r\n    const day = (props.isHebrew ? convertToHebrew(props.day, false, false) : props.day);\r\n    const title = props.isHebrew ? props.jewishDateStrHebrew : props.jewishDateStr;\r\n\r\n\r\n    const otherMonthClass = (!props.isCurrentMonth ? \" otherMonth\" : \"\");\r\n    const selectedDayClass = props.selectedDay && (IsJewishDatesEqual(props.jewishDate, props.selectedDay.jewishDate) ? \" selectedDay\" : \"\");\r\n    const classNames = `day${otherMonthClass}${selectedDayClass}`;\r\n\r\n    return (\r\n        <div data-testid={undefined} className={classNames} title={title} onClick={handleClick}>\r\n            {day}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Day;","C:\\Users\\barjan\\Desktop\\front-end\\pure\\src\\components\\Calendar\\Navigation.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":3,"column":35,"nodeType":"97","messageId":"98","endLine":3,"endColumn":44},{"ruleId":"95","severity":1,"message":"99","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":17},{"ruleId":"95","severity":1,"message":"100","line":6,"column":8,"nodeType":"97","messageId":"98","endLine":6,"endColumn":15},{"ruleId":"95","severity":1,"message":"96","line":1,"column":21,"nodeType":"97","messageId":"98","endLine":1,"endColumn":30},{"ruleId":"95","severity":1,"message":"99","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":17},{"ruleId":"101","severity":1,"message":"102","line":20,"column":7,"nodeType":"103","endLine":20,"endColumn":9,"suggestions":"104"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":29,"nodeType":"97","messageId":"98","endLine":1,"endColumn":38},{"ruleId":"95","severity":1,"message":"105","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":16},{"ruleId":"95","severity":1,"message":"106","line":4,"column":33,"nodeType":"97","messageId":"98","endLine":4,"endColumn":47},{"ruleId":"95","severity":1,"message":"107","line":7,"column":52,"nodeType":"97","messageId":"98","endLine":7,"endColumn":67},{"ruleId":"95","severity":1,"message":"108","line":14,"column":24,"nodeType":"97","messageId":"98","endLine":14,"endColumn":32},{"ruleId":"95","severity":1,"message":"109","line":15,"column":12,"nodeType":"97","messageId":"98","endLine":15,"endColumn":26},{"ruleId":"95","severity":1,"message":"110","line":34,"column":15,"nodeType":"97","messageId":"98","endLine":34,"endColumn":23},{"ruleId":"95","severity":1,"message":"96","line":3,"column":35,"nodeType":"97","messageId":"98","endLine":3,"endColumn":44},{"ruleId":"95","severity":1,"message":"99","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":17},{"ruleId":"95","severity":1,"message":"111","line":12,"column":12,"nodeType":"97","messageId":"98","endLine":12,"endColumn":22},{"ruleId":"95","severity":1,"message":"108","line":12,"column":33,"nodeType":"97","messageId":"98","endLine":12,"endColumn":41},{"ruleId":"95","severity":1,"message":"112","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":14},{"ruleId":"95","severity":1,"message":"113","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":19},{"ruleId":"95","severity":1,"message":"106","line":2,"column":21,"nodeType":"97","messageId":"98","endLine":2,"endColumn":35},{"ruleId":"95","severity":1,"message":"114","line":2,"column":54,"nodeType":"97","messageId":"98","endLine":2,"endColumn":64},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'Jumbotron' is defined but never used.","Identifier","unusedVar","'AppNavbar' is defined but never used.","'UserObj' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'readDates'. Either include it or remove the dependency array.","ArrayExpression",["117"],"'Calendar' is defined but never used.","'BasicJewishDay' is defined but never used.","'BasicJewishDate' is defined but never used.","'onLogout' is assigned a value but never used.","'basicJewishDay' is assigned a value but never used.","'fullDate' is assigned a value but never used.","'activeUser' is assigned a value but never used.","'Hebcal' is defined but never used.","'JewishDay' is defined but never used.","'JewishDate' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Update the dependencies array to be: [readDates]",{"range":"120","text":"121"},[597,599],"[readDates]"]