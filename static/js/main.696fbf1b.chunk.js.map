{"version":3,"sources":["models/UserObj.js","components/NavBar/AppNavbar.js","pages/HomePage/HomePage.js","models/DateObj.js","pages/DatesPage/DatesPage.js","pages/ProfilePage/ProfilePage.js","components/Calendar/Day.js","components/AddDate/AddDate.js","components/Calendar/Weekday.js","components/Calendar/Calendar.js","pages/UserHomePage/UserHomePage.js","pages/LoginPage/LoginPage.js","App.js","reportWebVitals.js","index.js"],"names":["UserObj","parseobj","this","id","username","get","pswd","email","lname","fname","AppNavbar","props","activeUser","onLogout","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","onClick","Form","inline","FormControl","type","placeholder","Button","variant","HomePage","to","DateObj","parseDate","date","Hebcal","HDate","category","getDate","greg","getMonth","getFullYear","DatesPage","useState","userDates","setUserDates","Parse","Object","extend","query","Query","dates","useEffect","equalTo","User","current","find","then","results","map","result","index","getCategory","console","log","error","Container","Table","striped","bordered","hover","size","ProfilePage","userEmail","setUserEmail","userFName","setUserFName","userLName","setUserLName","userPswd","setUserPswd","userName","a","user","set","save","response","document","write","JSON","stringify","catch","Group","controlId","Label","Control","value","disabled","Text","onChange","e","target","UpdateUser","Day","special","day","isHebrew","translator","anotherMonth","colorClassName","setColorClassName","moreTitle","setMoreTitle","showDay","isSpecial","spec","title","toDateString","substring","toString","class","AddDate","show","setShow","initialDate","hebDate","dateDetails","setDateDetails","dateToAdd","setDateToAdd","dateCategory","setDateCategory","Modal","centered","onHide","Header","Title","Body","Dialog","as","custom","rows","cols","Footer","choosedDate","hebChoosedDate","setHours","myNewObject","alert","additionDate","hebAdditionDate","setDate","addDate","Weekday","Calendar","Date","initDate","setInitDate","monthDays","setMonthDays","showAddNewDate","setShowAddNewDate","addDateInit","setAddDateInit","specialDates","setSpecialDates","month","year","spDates","setDays","newD","getHours","gematria","1","2","3","4","5","6","7","8","9","10","20","30","40","50","60","70","80","90","700","800","0","11","12","13","14","15","16","17","18","19","21","22","23","24","25","26","27","28","29","daysAtMonth","firstOfMonth","daysInMonth","firstOfMonthOffset","getDay","lastOfMonthOffset","tempDay","i","prev","next","push","setAddDate","convertToHebrew","yearNum","remainder","quotient1","remainder1","quotient2","quotient3","str","Math","floor","parseInt","isLeapYear","getYearObject","UserHomePage","LoginPage","onLogin","redirecTo","setRedirecTo","logIn","parseUser","Check","label","UserLogin","App","setActiveUser","Jumbotron","logOut","Switch","exact","path","loggedinUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","serverURL","initialize","ReactDOM","render","StrictMode","getElementById"],"mappings":"qmBAceA,EAZX,WAAYC,GAAU,oBAClBC,KAAKC,GAAKF,EAASE,GACnBD,KAAKE,SAAWH,EAASI,IAAI,YAC7BH,KAAKI,KAAOL,EAASI,IAAI,YACzBH,KAAKK,MAAQN,EAASI,IAAI,SAC1BH,KAAKM,MAAQP,EAASI,IAAI,SAC1BH,KAAKO,MAAQR,EAASI,IAAI,U,qECkBnBK,MAvBf,SAAoBC,GAAQ,IAEjBC,EAAwBD,EAAxBC,WAAYC,EAAYF,EAAZE,SAEnB,OACI,eAACC,EAAA,EAAD,CAAQC,OAAO,KAAf,UACI,cAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,IAAnB,sCACA,cAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,eAACL,EAAA,EAAOM,SAAR,CAAiBjB,GAAG,mBAApB,UACI,eAACkB,EAAA,EAAD,CAAKC,UAAU,UAAf,UACKV,EAAa,cAACS,EAAA,EAAIE,KAAL,CAAUN,KAAK,YAAf,kDAA+C,KAC5DL,EAAa,cAACS,EAAA,EAAIE,KAAL,CAAUN,KAAK,UAAf,wDAA8C,KAC3DL,EAAa,cAACS,EAAA,EAAIE,KAAL,CAAUN,KAAK,IAAIO,QAAS,kBAAIX,KAAhC,4CAA+D,cAACQ,EAAA,EAAIE,KAAL,CAAUN,KAAK,UAAf,+CAEjF,eAACQ,EAAA,EAAD,CAAMC,QAAM,EAAZ,UACI,cAACC,EAAA,EAAD,CAAaC,KAAK,OAAOC,YAAY,SAASP,UAAU,YACxD,cAACQ,EAAA,EAAD,CAAQC,QAAQ,eAAhB,sD,OCGLC,MAhBf,SAAkBrB,GAId,OAFqBA,EAAdC,WAGI,cAAC,IAAD,CAAUqB,GAAG,cAIpB,qBAAKX,UAAU,U,8DCkBRY,E,WA9BX,WAAYC,GAAW,oBACnBjC,KAAKkC,KAAO,IAAIC,IAAOC,MAAMH,EAAU9B,IAAI,cAC3CH,KAAKqC,SAAWJ,EAAU9B,IAAI,gB,sDAI9B,OAAOH,KAAKkC,KAAKI,Y,gCAIjB,OAAOtC,KAAKkC,KAAKK,S,oCAIjB,OAAOvC,KAAKqC,W,iCAIZ,OAAOrC,KAAKkC,KAAKM,a,oCAIjB,OAAOxC,KAAKkC,KAAKO,gB,iCAIjB,OAAOzC,KAAKkC,S,KC+BLQ,MArDf,SAAmBjC,GAAO,IAEfC,EAAcD,EAAdC,WAFc,EAGWiC,mBAAS,IAHpB,mBAGdC,EAHc,KAGJC,EAHI,KAKfX,EAAOY,IAAMC,OAAOC,OAAO,QAC3BC,EAAQ,IAAIH,IAAMI,MAAMhB,GAC1BiB,EAAQ,GAOZ,OALAC,qBAAU,WAUNH,EAAMI,QAAQ,SAAUP,IAAMQ,KAAKC,WACnCN,EAAMO,OAAOC,MAAK,SAACC,GAGfP,EAAQO,EAAQC,KAAI,SAAAC,GAAM,OAAI,IAAI5B,EAAQ4B,MAC1Cf,EAAaM,EAAMQ,KAAI,SAACzB,EAAK2B,GAAN,OAAgB,+BAAI,6BAAKA,EAAM,IAAO,6BAAK3B,EAAKI,YAAe,6BAAKJ,EAAKM,aAAgB,6BAAKN,EAAKO,gBAAmB,6BAAKP,EAAK4B,uBACvJC,QAAQC,IAAIN,MACb,SAACO,GACAF,QAAQE,MAAM,4BAA6BA,QAhBjD,IAGGvD,EAkBD,qBAAKU,UAAU,WAAf,SACI,cAAC8C,EAAA,EAAD,UACA,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,KAAnC,UACI,gCACI,+BACI,mCACA,oDACA,0DACA,oDACA,qEAGR,gCACK3B,WA9BN,cAAC,IAAD,CAAUb,GAAG,O,kCC0EbyC,MA1Ff,SAAqB/D,GAAO,IAEjBC,EAAcD,EAAdC,WAFgB,EAIUiC,mBAASjC,EAAaA,EAAWL,MAAQ,IAJnD,mBAIhBoE,EAJgB,KAINC,EAJM,OAKW/B,mBAASjC,EAAaA,EAAWH,MAAQ,IALpD,mBAKhBoE,EALgB,KAKLC,EALK,OAMWjC,mBAASjC,EAAaA,EAAWJ,MAAQ,IANpD,mBAMhBuE,EANgB,KAMLC,EANK,OAOSnC,mBAASjC,EAAaA,EAAWN,KAAO,IAPjD,mBAOhB2E,EAPgB,KAONC,EAPM,KAUvB,IAAKtE,EACD,OAAO,cAAC,IAAD,CAAUqB,GAAG,MAGxB,IAAMkD,EAAWvE,EAAWR,SAEtBoD,EAAO,IAAIR,IAAMQ,KACjBL,EAAQ,IAAIH,IAAMI,MAAMI,GAjBP,4CAmBvB,sBAAA4B,EAAA,sDACIjC,EAAM9C,IAAI,cAAcsD,MAAK,SAAC0B,GAE1BA,EAAKC,IAAI,QAASX,GAClBU,EAAKC,IAAI,WAAYL,GACrBI,EAAKC,IAAI,QAAST,GAClBQ,EAAKC,IAAI,QAASP,GAElBM,EAAKE,OAAO5B,MAAK,SAAC6B,GACQ,qBAAbC,UAA0BA,SAASC,MAAT,wBAAgCC,KAAKC,UAAUJ,KACpFvB,QAAQC,IAAI,eAAgBsB,MAC3BK,OAAM,SAAC1B,GACgB,qBAAbsB,UAA0BA,SAASC,MAAT,qCAA6CC,KAAKC,UAAUzB,KACjGF,QAAQE,MAAM,4BAA6BA,SAbrD,4CAnBuB,sBAqCvB,OACI,qBAAK7C,UAAU,aAAf,SACI,cAAC8C,EAAA,EAAD,UACI,eAAC3C,EAAA,EAAD,WACI,eAACA,EAAA,EAAKqE,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACtE,EAAA,EAAKuE,MAAN,0DACA,cAACvE,EAAA,EAAKwE,QAAN,CAAcC,MAAOf,EAAUvD,KAAK,QAAQC,YAAY,cAAcsE,UAAQ,IAC9E,cAAC1E,EAAA,EAAK2E,KAAN,CAAW9E,UAAU,aAArB,mJAKJ,eAACG,EAAA,EAAKqE,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACtE,EAAA,EAAKuE,MAAN,mDACA,cAACvE,EAAA,EAAKwE,QAAN,CAAcC,MAAOvB,EAAW/C,KAAK,QAAQC,YAAY,cAAcwE,SAAU,SAACC,GAAD,OAAO1B,EAAa0B,EAAEC,OAAOL,UAC9G,cAACzE,EAAA,EAAK2E,KAAN,CAAW9E,UAAU,aAArB,gQAGA,cAACG,EAAA,EAAK2E,KAAN,CAAW9E,UAAU,aAArB,wIAKJ,eAACG,EAAA,EAAKqE,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACtE,EAAA,EAAKuE,MAAN,6CACA,cAACvE,EAAA,EAAKwE,QAAN,CAAcC,MAAOjB,EAAUrD,KAAK,WAAWC,YAAY,WAAWwE,SAAU,SAACC,GAAD,OAAOpB,EAAYoB,EAAEC,OAAOL,aAGhH,eAACzE,EAAA,EAAKqE,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACtE,EAAA,EAAKuE,MAAN,oDACA,cAACvE,EAAA,EAAKwE,QAAN,CAAcC,MAAOrB,EAAWjD,KAAK,OAAOC,YAAY,cAAcwE,SAAU,SAACC,GAAD,OAAOxB,EAAawB,EAAEC,OAAOL,UAC7G,cAACzE,EAAA,EAAK2E,KAAN,CAAW9E,UAAU,aAArB,qFAKJ,eAACG,EAAA,EAAKqE,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACtE,EAAA,EAAKuE,MAAN,oDACA,cAACvE,EAAA,EAAKwE,QAAN,CAAcC,MAAOnB,EAAWnD,KAAK,OAAOC,YAAY,cAAcwE,SAAU,SAACC,GAAD,OAAOtB,EAAasB,EAAEC,OAAOL,UAC7G,cAACzE,EAAA,EAAK2E,KAAN,CAAW9E,UAAU,aAArB,2FAKJ,cAACQ,EAAA,EAAD,CAAQC,QAAQ,kBAAkBH,KAAK,SAASJ,QAAS,kBAjFlD,0CAiFuDgF,IAA9D,6E,cC5DLC,MAxBf,SAAa9F,GAAQ,IAEV+F,EAA6D/F,EAA7D+F,QAASC,EAAoDhG,EAApDgG,IAAKC,EAA+CjG,EAA/CiG,SAAUC,EAAqClG,EAArCkG,WAAYrF,EAAyBb,EAAzBa,QAASsF,EAAgBnG,EAAhBmG,aAFpC,EAG4BjE,mBAAS,IAHrC,mBAGTkE,EAHS,KAGOC,EAHP,OAIkBnE,mBAAS,IAJ3B,mBAIToE,EAJS,KAIEC,EAJF,KAMZC,EAAUP,EAAWC,EAAWF,EAAInE,WAAamE,EAAInE,UAWzD,OAVAc,qBAAU,WACN,IAAM8D,EAAYV,EAAQhD,MAAK,SAAC2D,GAAD,OAAWA,EAAK7E,YAAcmE,EAAInE,WAAa6E,EAAK3E,aAAeiE,EAAIjE,YAC9B2E,EAAK1E,gBAAkBgE,EAAIhE,iBACvFqE,EAAZI,EAA8B,IAAIA,EAAUpD,cAAmC,IACnEkD,EAAZE,EAAyB,KAAOA,EAAUpD,cAA8B,IACrEoD,GACCnD,QAAQC,IAAIkD,MAKhB,sBAAK9F,UAAW,OAAOwF,EAAc,aAAe,IAAIC,EAAgBvF,QAAS,kBAAMsF,EAAc,KAAOtF,EAAQmF,IAAMW,MAAOX,EAAIlE,OAAO8E,eAAeC,UAAU,GAAG,IAAIb,EAAIc,SAASb,EAAS,IAAI,MAAMK,EAA5M,UACI,sBAAMS,MAAM,UAAZ,SAAuBP,IAAe,sBAAMO,MAAM,UAAZ,SAAuBf,EAAIlE,OAAOD,gB,kBCwHrEmF,MAxIf,SAAiBhH,GAAQ,IACdiH,EAAuCjH,EAAvCiH,KAAMC,EAAiClH,EAAjCkH,QAASC,EAAwBnH,EAAxBmH,YADF,GAC0BnH,EAAXoH,QACGlF,mBAAS,KAF3B,mBAEbmF,EAFa,KAEAC,EAFA,OAGcpF,mBAASiF,GAHvB,mBAGbI,EAHa,KAGFC,EAHE,OAIoBtF,mBAAS,SAJ7B,mBAIbuF,EAJa,KAICC,EAJD,KA+FpB,OACI,eAACC,EAAA,EAAD,CAAO7D,KAAK,KAAK8D,UAAQ,EAACX,KAAMA,EAAMY,OAAQ,kBAAKX,GAAQ,IAA3D,UACQ,cAACS,EAAA,EAAMG,OAAP,UACI,cAACH,EAAA,EAAMI,MAAP,uGAGJ,eAACJ,EAAA,EAAMK,KAAP,WACI,iJACA,kLAGJ,cAAC,IAAD,CACIzC,MAAO4B,EACPlB,UAAQ,EACRpF,QAAS,SAACmF,GACNwB,EAAaxB,EAAIvE,OAErBd,UAAU,QAEd,eAACgH,EAAA,EAAMM,OAAP,WACA,eAACnH,EAAA,EAAKwE,QAAN,CAAc4C,GAAG,SAAS3C,MAAOkC,EAAcU,QAAM,EAACzC,SAAU,SAACC,GAAD,OAAM+B,EAAgB/B,EAAEC,OAAOL,QAA/F,UACQ,wBAAQA,MAAM,QAAd,gCACA,wBAAQA,MAAM,SAAd,+DACA,wBAAQA,MAAM,IAAd,gCACA,wBAAQA,MAAM,IAAd,sCACA,wBAAQA,MAAM,IAAd,yCAEJ,eAACzE,EAAA,EAAKqE,MAAN,CAAYC,UAAU,+BAAtB,UACI,cAACtE,EAAA,EAAKuE,MAAN,kHACA,cAACvE,EAAA,EAAKwE,QAAN,CAAc4C,GAAG,WAAWE,KAAM,EAAGC,KAAM,IAAK9C,MAAO8B,EAAa3B,SAAU,SAACC,GAAD,OAAO2B,EAAe3B,EAAEC,OAAOL,gBAIrH,eAACoC,EAAA,EAAMW,OAAP,WACI,cAACnH,EAAA,EAAD,CAAQC,QAAQ,YAAYP,QAAS,kBAAKqG,GAAQ,IAAlD,4CACA,cAAC/F,EAAA,EAAD,CAAQC,QAAQ,UAAUP,QAAS,kBAzHnD,WACI,IAAI0H,EAAchB,EACdiB,EAAiB,IAAI9G,IAAOC,MAAM4F,GACtCgB,EAAYE,SAAS,EAAE,EAAE,EAAE,KAC3B,IACMC,EAAc,IADPrG,IAAMC,OAAOC,OAAO,SAqBjC,GAnBAmG,EAAY/D,IAAI,YAAa4D,GAC7BG,EAAY/D,IAAI,SAAUtC,IAAMQ,KAAKC,WACrC4F,EAAY/D,IAAI,eAAgB8C,GAChCiB,EAAY/D,IAAI,UAAW0C,GAC3BqB,EAAY/D,IAAI,MAAO6D,EAAe3G,WACtC6G,EAAY/D,IAAI,QAAS6D,EAAezG,YACxC2G,EAAY/D,IAAI,OAAQ6D,EAAexG,eAEvC0G,EAAY9D,OAAO5B,MACf,SAACG,GAC2B,qBAAb2B,UAA0B6D,MAAM,+EACvCrF,QAAQC,IAAI,eAAgBJ,MAEhC,SAACK,GAC2B,qBAAbsB,UAA0B6D,MAAM,uNACvCrF,QAAQE,MAAM,8BAA+BA,MAIzC,MAAjBiE,EAAqB,CACpB,IAAImB,EAAerB,EACfsB,EAAkB,IAAInH,IAAOC,MAAM4F,GACvCsB,EAAgBC,QAAQD,EAAgBhH,UAAU,KAClD+G,EAAeC,EAAgB/G,QAClB2G,SAAS,EAAE,EAAE,EAAE,KAC5B,IACMC,EAAc,IADPrG,IAAMC,OAAOC,OAAO,SAGjCmG,EAAY/D,IAAI,YAAaiE,GAC7BF,EAAY/D,IAAI,SAAUtC,IAAMQ,KAAKC,WACrC4F,EAAY/D,IAAI,eAAgB,KAChC+D,EAAY/D,IAAI,UAAW0C,GAC3BqB,EAAY/D,IAAI,MAAOkE,EAAgBhH,WACvC6G,EAAY/D,IAAI,QAASkE,EAAgB9G,YACzC2G,EAAY/D,IAAI,OAAQkE,EAAgB7G,eAExC0G,EAAY9D,OAAO5B,MACf,SAACG,GAC2B,qBAAb2B,UACPxB,QAAQC,IAAI,eAAgBJ,MAEhC,SAACK,GAC2B,qBAAbsB,UAA0B6D,MAAM,uNACvCrF,QAAQE,MAAM,8BAA+BA,MAKjE,GAAoB,MAAjBiE,EAAqB,CACpB,IAAImB,EAAerB,EACfsB,EAAkB,IAAInH,IAAOC,MAAM4F,GACvCsB,EAAgBC,QAAQD,EAAgBhH,UAAU,IAClD+G,EAAeC,EAAgB/G,QAClB2G,SAAS,EAAE,EAAE,EAAE,KAC5B,IACMC,EAAc,IADPrG,IAAMC,OAAOC,OAAO,SAGjCmG,EAAY/D,IAAI,YAAaiE,GAC7BF,EAAY/D,IAAI,SAAUtC,IAAMQ,KAAKC,WACrC4F,EAAY/D,IAAI,eAAgB,KAChC+D,EAAY/D,IAAI,UAAW0C,GAC3BqB,EAAY/D,IAAI,MAAOkE,EAAgBhH,WACvC6G,EAAY/D,IAAI,QAASkE,EAAgB9G,YACzC2G,EAAY/D,IAAI,OAAQkE,EAAgB7G,eAExC0G,EAAY9D,OAAO5B,MACf,SAACG,GAC2B,qBAAb2B,UACPxB,QAAQC,IAAI,eAAgBJ,MAEhC,SAACK,GAC2B,qBAAbsB,UAA0B6D,MAAM,uNACvCrF,QAAQE,MAAM,8BAA+BA,MAKjE0D,GAAQ,GAsC4C6B,IAAxC,4E,OCvHLC,MAff,SAAiBhJ,GAEb,OACI,sBAAKW,UAAU,UAAf,UACI,yCACA,yCACA,yCACA,yCACA,yCACA,yCACA,6CCmLGsI,MAnLf,WAEI,IAFe,EAGiB/G,mBAAS,IAAIR,IAAOC,MAAM,IAAIuH,OAH/C,mBAGRC,EAHQ,KAGEC,EAHF,OAImBlH,mBAAS,IAJ5B,mBAIRmH,EAJQ,KAIGC,EAJH,OAK6BpH,oBAAS,GALtC,mBAKRqH,EALQ,KAKQC,EALR,OAMuBtH,mBAAS,IAAIgH,MANpC,mBAMRO,EANQ,KAMKC,EANL,OAOyBxH,mBAAS,IAPlC,mBAORyH,EAPQ,KAOMC,EAPN,KASTnI,EAAOY,IAAMC,OAAOC,OAAO,QAC3BC,EAAQ,IAAIH,IAAMI,MAAMhB,GACxBoI,EAAQV,EAASpH,WACjB+H,EAAOX,EAASnH,cACtBQ,EAAMI,QAAQ,SAAUP,IAAMQ,KAAKC,WACnCN,EAAMI,QAAQ,QAASiH,GACvBrH,EAAMI,QAAQ,OAAQkH,GAEtBnH,qBAAU,WACNH,EAAMO,OAAOC,MAAK,SAACC,GACfK,QAAQC,IAAIN,GACZ,IAAM8G,EAAU9G,EAAQC,KAAI,SAAC8C,GAAD,OAAS,IAAIzE,EAAQyE,MACjD4D,EAAgBG,MAGb,SAACvG,GACAF,QAAQE,MAAMA,GACdwG,SAGV,CAACb,IAGHxG,qBAAU,WACN,IAAIsH,EAAOd,EAASrH,OACpBmI,EAAKxB,UAAS,IAAIS,MAAOgB,YACzBd,EAAY,IAAI1H,IAAOC,MAAMsI,MAC/B,CAACV,IAEH5G,qBAAU,WACNqH,MAEF,CAACL,IAGH,IAAMQ,EAAW,CACbC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,IAAK,SACLC,IAAK,UAGHrF,EAAa,CACfsF,EAAG,GACHpB,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,GAAI,SACJY,GAAI,eACJC,GAAI,eACJC,GAAI,eACJC,GAAI,eACJC,GAAI,eACJC,GAAI,eACJC,GAAI,eACJC,GAAI,eACJC,GAAI,eACJnB,GAAI,SACJoB,GAAI,eACJC,GAAI,eACJC,GAAI,eACJC,GAAI,eACJC,GAAI,eACJC,GAAI,eACJC,GAAI,eACJC,GAAI,eACJC,GAAI,eACJ3B,GAAI,UAGR,SAASf,IAQL,IAPA,IAKI2C,EALAC,EAAgB,IAAIlL,IAAOC,MAAM,EAAGwH,EAASpH,WAAYoH,EAASnH,eAClE6K,EAAcD,EAAaC,cAC3BC,EAAqBF,EAAaG,SAClCC,EAAoB,EAAEtL,IAAOC,MAAMkL,EAAaD,EAAa7K,YAAYgL,SACzElD,EAAQ,GAERoD,EAAUL,EACNM,EAAE,EAAGA,GAAGJ,EAAmB,EAAGI,IAClCD,EAAUA,EAAQE,OAEtB,IAAI,IAAID,EAAE,EAAGA,GAAKL,EAAcC,EAAqBE,EAAmBE,IACpED,EAAUA,EAAQG,OAClBvD,EAAMwD,KAAKJ,GAEfN,EAAc9C,EAAM3G,KAAI,SAAC8C,EAAK5C,GAAN,OAAgB,cAAC,EAAD,CAAiB2C,QAAS4D,EAAc3D,IAAKA,EAAKC,UAAU,EAAMC,WAAYA,EAAYrF,QAASyM,EAAYnH,aAAc/C,EAAM0J,GAA2B1J,EAAOyJ,EAAYC,EAAmB,GAA1L1J,MAClDkG,EAAaqD,GAGjB,SAASW,EAAWtH,GAChB0D,EAAe1D,GACfwD,GAAkB,GAGtB,SAAS+D,EAAiBC,GACtB,IACIC,EAAYD,EAAU,IACtBE,EAAYD,EAAW,IACvBE,EAAaF,EAAY,IACzBG,EAAYD,EAAa,GAEzBE,EADaF,EAAa,GAG1BG,EAAK,SAKT,OAJAA,GAAO3D,EAA+B,IAAtB4D,KAAKC,MAAMN,IACXI,GAAJ,IAAZD,EAAuB,IAAY,GACnCC,GAAO3D,EAA+B,GAAtB4D,KAAKC,MAAMJ,IACXE,GAAJ,IAAZD,EAAqB,GAAY,IAAM1D,EAAS4D,KAAKC,MAAMH,IAK/D,OACI,eAACpK,EAAA,EAAD,CAAW9C,UAAU,aAArB,UACI,gCACI,cAACG,EAAA,EAAKuE,MAAN,yKACA,eAACvE,EAAA,EAAKwE,QAAN,CAAc4C,GAAG,SAAS3C,MAAO4D,EAASpH,WAAYoG,QAAM,EAACzC,SAAU,SAACC,GAAD,OAAMyD,EAAa,IAAI1H,IAAOC,MAAMwH,EAAStH,UAAUoM,SAAStI,EAAEC,OAAOL,OAAQ4D,EAASnH,iBAAjK,UACQ,wBAAQuD,MAAO,EAAf,sCACA,wBAAQA,MAAO,EAAf,4CACA,wBAAQA,MAAO,EAAf,4CACA,wBAAQA,MAAO,GAAf,gCACA,wBAAQA,MAAO,GAAf,gCACA,wBAAQA,MAAO,GAAf,gCACC7D,IAAOyH,EAASnH,eAAekM,aAAc,wBAAQ3I,MAAO,GAAf,uCAAoC,KAClF,wBAAQA,MAAO,EAAf,sCACA,wBAAQA,MAAO,EAAf,sCACA,wBAAQA,MAAO,EAAf,4CACA,wBAAQA,MAAO,EAAf,sCACA,wBAAQA,MAAO,EAAf,0BACA,wBAAQA,MAAO,EAAf,yCAEJ,eAACzE,EAAA,EAAKwE,QAAN,CAAc4C,GAAG,SAAS3C,MAAO,IAAK4C,QAAM,EAACzC,SAAU,SAACC,GAAD,OAAMyD,EAAa,IAAI1H,IAAOC,MAAMwH,EAAStH,UAAUsH,EAASpH,WAAYoH,EAASnH,cAAciM,SAAStI,EAAEC,OAAOL,UAA5K,UACI,wBAAQA,MAAO,KAAf,SAAsBgI,EAAgBpE,EAASgF,gBAAgBhB,OAAOA,OAAOrD,QAC7E,wBAAQvE,MAAO,KAAf,SAAsBgI,EAAgBpE,EAASgF,gBAAgBhB,OAAOrD,QACtE,wBAAQvE,MAAO,IAAf,SAAqBgI,EAAgBpE,EAASnH,iBAC9C,wBAAQuD,MAAO,IAAf,SAAqBgI,EAAgBpE,EAASgF,gBAAgBf,OAAOtD,QACrE,wBAAQvE,MAAO,IAAf,SAAqBgI,EAAgBpE,EAASgF,gBAAgBf,OAAOA,OAAOtD,cAGxF,cAAC,EAAD,IACA,sBAAKnJ,UAAS,QAAd,UACK0I,EACJE,EAAiB,cAAC,EAAD,CAAStC,KAAMsC,EAAgBrC,QAASsC,EAAmBrC,YAAasC,EAAY3H,OAAQsF,QAASqC,IAAiB,YC3JrI2E,MAvBf,SAAsBpO,GAAQ,IAEnBC,EAAcD,EAAdC,WAFkB,EAGmBiC,oBAAS,GAH5B,mBAGlBqH,EAHkB,KAGFC,EAHE,KAKzB,OAAKvJ,EAKD,sBAAKU,UAAU,YAAf,UAEI,eAAC8C,EAAA,EAAD,WACI,cAACtC,EAAA,EAAD,CAAQF,KAAK,SAASG,QAAQ,eAAeP,QAAS,kBAAI2I,GAAkB,IAA5E,eACA,cAAC,EAAD,OAGJ,cAAC,EAAD,CAASvC,KAAMsC,EAAgBrC,QAASsC,EAAmBrC,YAAa,IAAI+B,UAXzE,cAAC,IAAD,CAAU5H,GAAG,O,OC+Cb+M,MApDf,SAAmBrO,GAAQ,IAEhBsO,EAAWtO,EAAXsO,QAFe,EAGYpM,mBAAS,IAHrB,mBAGf8B,EAHe,KAGJC,EAHI,OAIU/B,mBAAS,IAJnB,mBAIfoC,EAJe,KAILC,EAJK,OAKYrC,oBAAS,GALrB,mBAKfqM,EALe,KAKJC,EALI,iDAOtB,4BAAA/J,EAAA,+EAGgCpC,IAAMQ,KAAK4L,MAAMzK,EAAWM,GAH5D,OAGcoK,EAHd,OAKQJ,EAAQ,IAAIjP,EAAQqP,IACpBF,GAAa,GANrB,gDASQ7F,MAAM,8BAAD,MATb,0DAPsB,sBAqBtB,OAAI4F,EACO,cAAC,IAAD,CAAUjN,GAAG,MAGpB,qBAAKX,UAAU,WAAf,SACI,cAAC8C,EAAA,EAAD,UACI,eAAC3C,EAAA,EAAD,WACI,eAACA,EAAA,EAAKqE,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACtE,EAAA,EAAKuE,MAAN,4BACA,cAACvE,EAAA,EAAKwE,QAAN,CAAcC,MAAOvB,EAAW/C,KAAK,QAAQC,YAAY,cAAcwE,SAAU,SAACC,GAAD,OAAO1B,EAAa0B,EAAEC,OAAOL,UAC9G,cAACzE,EAAA,EAAK2E,KAAN,CAAW9E,UAAU,aAArB,+DAKJ,eAACG,EAAA,EAAKqE,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACtE,EAAA,EAAKuE,MAAN,uBACA,cAACvE,EAAA,EAAKwE,QAAN,CAAcC,MAAOjB,EAAUrD,KAAK,WAAWC,YAAY,WAAWwE,SAAU,SAACC,GAAD,OAAOpB,EAAYoB,EAAEC,OAAOL,aAEhH,cAACzE,EAAA,EAAKqE,MAAN,CAAYC,UAAU,oBAAtB,SACI,cAACtE,EAAA,EAAK6N,MAAN,CAAY1N,KAAK,WAAW2N,MAAM,mBAEtC,cAACzN,EAAA,EAAD,CAAQC,QAAQ,UAAUH,KAAK,SAASJ,QAAS,kBA3C3C,0CA2CgDgO,IAAtD,4B,kBCELC,MAtCf,WAAgB,IAAD,EAEuB5M,mBAClCG,IAAMQ,KAAKC,UAAY,IAAIzD,EAAQgD,IAAMQ,KAAKC,WAAa,MAHhD,mBAEN7C,EAFM,KAEM8O,EAFN,KAcb,OACE,sBAAKpO,UAAU,UAAf,UACE,cAACqO,EAAA,EAAD,UACE,cAACvL,EAAA,EAAD,UACI,yCAIJ,cAACA,EAAA,EAAD,UACI,cAAC,EAAD,CAAWxD,WAAYA,EAAYC,SAlB7C,WACE6O,EAAc,MACd1M,IAAMQ,KAAKoM,cAkBT,cAAC,IAAD,UACE,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SAAsB,cAAC,EAAD,CAAUnP,WAAYA,MAC5C,cAAC,IAAD,CAAOkP,OAAK,EAACC,KAAK,YAAlB,SAA8B,cAAC,EAAD,CAAcnP,WAAYA,MACxD,cAAC,IAAD,CAAOkP,OAAK,EAACC,KAAK,SAAlB,SAA2B,cAAC,EAAD,CAAWnP,WAAYA,EAAYqO,QAnBtE,SAAqBe,GACnBN,EAAcM,QAmBR,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAAlB,SAA2B,cAAC,EAAD,CAAWnP,WAAYA,MAClD,cAAC,IAAD,CAAOkP,OAAK,EAACC,KAAK,WAAlB,SAA6B,cAAC,EAAD,CAAanP,WAAYA,eClCjDqP,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxM,MAAK,YAAkD,IAA/CyM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdlN,IAAMyN,UAAY,gCAClBzN,IAAM0N,WACJ,2CACA,4CAIFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpL,SAASqL,eAAe,SAM1Bb,M","file":"static/js/main.696fbf1b.chunk.js","sourcesContent":["\r\nclass UserObj{\r\n    constructor(parseobj){\r\n        this.id = parseobj.id;\r\n        this.username = parseobj.get(\"username\");\r\n        this.pswd = parseobj.get(\"password\");\r\n        this.email = parseobj.get(\"email\");\r\n        this.lname = parseobj.get(\"lname\");\r\n        this.fname = parseobj.get(\"fname\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default UserObj","import { Button, Form, FormControl, Nav, Navbar } from \"react-bootstrap\";\r\nimport './AppNavbar.css';\r\n\r\nfunction  AppNavbar(props) {\r\n\r\n    const {activeUser, onLogout} = props;\r\n    \r\n    return(\r\n        <Navbar expand=\"lg\">\r\n            <Navbar.Brand href=\"#\">ראשי</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    {activeUser ? <Nav.Link href=\"#/profile\">פרופיל</Nav.Link> : null}\r\n                    {activeUser ? <Nav.Link href=\"#/dates\">תאריכים</Nav.Link> : null}\r\n                    {activeUser ? <Nav.Link href=\"#\" onClick={()=>onLogout()}>יציאה</Nav.Link> : <Nav.Link href=\"#/login\">כניסה</Nav.Link>}\r\n                </Nav>\r\n                <Form inline>\r\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                    <Button variant=\"outline-info\">חיפוש</Button>\r\n                </Form>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default AppNavbar;","import { Container, Jumbotron } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AppNavbar from \"../../components/NavBar/AppNavbar\";\r\nimport './HomePage.css'\r\n\r\n\r\nfunction HomePage(props) {\r\n    \r\n    const {activeUser} = props;\r\n \r\n    if (activeUser) {\r\n        return <Redirect to=\"/userhome\"/>\r\n    }\r\n\r\n    return(\r\n        <div className=\"h-pg\">\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default HomePage;","import Hebcal from 'hebcal';\r\n\r\nclass DateObj{\r\n    constructor(parseDate){\r\n        this.date = new Hebcal.HDate(parseDate.get(\"pickeDate\"));\r\n        this.category = parseDate.get(\"dateCategory\");\r\n    }\r\n\r\n    getDate(){\r\n        return this.date.getDate();\r\n    }\r\n\r\n    getGreg(){\r\n        return this.date.greg();\r\n    }\r\n\r\n    getCategory(){\r\n        return this.category;\r\n    }\r\n\r\n    getMonth(){\r\n        return this.date.getMonth();\r\n    }\r\n\r\n    getFullYear(){\r\n        return this.date.getFullYear();\r\n    }\r\n\r\n    getHDate(){\r\n        return this.date;\r\n    }\r\n}\r\n\r\nexport default DateObj;","import { Container, Table } from \"react-bootstrap\";\r\nimport Parse from 'parse';\r\nimport './DatesPage.css';\r\nimport DateObj from \"../../models/DateObj\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction DatesPage(props){\r\n\r\n    const {activeUser} = props;\r\n    const [userDates,setUserDates] =useState([]);\r\n\r\n    const date = Parse.Object.extend('date');\r\n    const query = new Parse.Query(date);\r\n    let dates = [];\r\n\r\n    useEffect(() => {\r\n        readDates();\r\n    },[]);\r\n\r\n    \r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    function readDates() {\r\n        query.equalTo(\"userId\", Parse.User.current());\r\n        query.find().then((results) => {\r\n            // You can use the \"get\" method to get the value of an attribute\r\n            // Ex: response.get(\"<ATTRIBUTE_NAME>\")\r\n            dates = results.map(result => new DateObj(result));\r\n            setUserDates(dates.map((date,index) => <tr><td>{index+1}</td><td>{date.getDate()}</td><td>{date.getMonth()}</td><td>{date.getFullYear()}</td><td>{date.getCategory()}</td></tr>));\r\n            console.log(results);\r\n        }, (error) => {\r\n            console.error('Error while fetching date', error);\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"dates-pg\">\r\n            <Container>\r\n            <Table striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>יום</th>\r\n                        <th>חודש</th>\r\n                        <th>שנה</th>\r\n                        <th>תיאור</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {userDates}\r\n                </tbody>\r\n                </Table>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DatesPage;","import { useState } from \"react\";\r\nimport './ProfilePage.css';\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Parse from 'parse';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction ProfilePage(props){\r\n\r\n    const {activeUser} = props;\r\n\r\n    const [userEmail,setUserEmail] = useState(activeUser ? activeUser.email : \"\");\r\n    const [userFName, setUserFName] = useState(activeUser ? activeUser.fname : \"\");\r\n    const [userLName, setUserLName] = useState(activeUser ? activeUser.lname : \"\");\r\n    const [userPswd, setUserPswd] = useState(activeUser ? activeUser.pswd : \"\");\r\n\r\n        \r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    const userName = activeUser.username;\r\n\r\n    const User = new Parse.User();\r\n    const query = new Parse.Query(User);\r\n\r\n    async function UpdateUser() {\r\n        query.get('Atuj4sdpeT').then((user) => {\r\n            // Updates the data we want\r\n            user.set('email', userEmail);\r\n            user.set('password', userPswd);\r\n            user.set('lname', userFName);\r\n            user.set('fname', userLName);\r\n            // Saves the user with the updated data\r\n            user.save().then((response) => {\r\n              if (typeof document !== 'undefined') document.write(`Updated user: ${JSON.stringify(response)}`);\r\n              console.log('Updated user', response);\r\n            }).catch((error) => {\r\n              if (typeof document !== 'undefined') document.write(`Error while updating user: ${JSON.stringify(error)}`);\r\n              console.error('Error while updating user', error);\r\n            });\r\n          });\r\n    }\r\n\r\n    return(\r\n        <div className=\"profile-pg\">\r\n            <Container>\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicUserName\">\r\n                        <Form.Label>שם משתמש</Form.Label>\r\n                        <Form.Control value={userName} type=\"email\" placeholder=\"Enter email\" disabled/>\r\n                        <Form.Text className=\"text-muted\">\r\n                        שם משתמש אינו ניתן לעדכון \r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>אימייל</Form.Label>\r\n                        <Form.Control value={userEmail} type=\"email\" placeholder=\"Enter email\" onChange={(e) => setUserEmail(e.target.value)} />\r\n                        <Form.Text className=\"text-muted\">\r\n                        נא לשים לב שבעת החלפת כתובת אימייל החשבון יתנתק\r\n                        </Form.Text>\r\n                        <Form.Text className=\"text-muted\">\r\n                        *לעולם לא נחשוף כתובת זו\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>סיסמא</Form.Label>\r\n                        <Form.Control value={userPswd} type=\"password\" placeholder=\"Password\" onChange={(e) => setUserPswd(e.target.value)}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicFName\">\r\n                        <Form.Label>שם פרטי</Form.Label>\r\n                        <Form.Control value={userFName} type=\"text\" placeholder=\"Enter email\" onChange={(e) => setUserFName(e.target.value)} />\r\n                        <Form.Text className=\"text-muted\">\r\n                        עדכון שם פרטי\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicLName\">\r\n                        <Form.Label>שם משפח</Form.Label>\r\n                        <Form.Control value={userLName} type=\"text\" placeholder=\"Enter email\" onChange={(e) => setUserLName(e.target.value)} />\r\n                        <Form.Text className=\"text-muted\">\r\n                            עדכון שם משפחה\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"outline-success\" type=\"button\" onClick={()=> UpdateUser()}>\r\n                        עדכן פרטים\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;","import Parse from 'parse';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction Day(props) {\r\n    \r\n    const {special, day, isHebrew, translator, onClick, anotherMonth} = props;\r\n    const [colorClassName, setColorClassName] = useState(\"\");\r\n    const [moreTitle, setMoreTitle] = useState('');\r\n\r\n    let showDay = isHebrew ? translator[day.getDate()] : day.getDate();\r\n    useEffect(()=>{\r\n        const isSpecial = special.find((spec) => (spec.getDate() === day.getDate() && spec.getMonth() === day.getMonth() &&\r\n                                                                                spec.getFullYear() === day.getFullYear()));\r\n        isSpecial ? setColorClassName(\" \"+isSpecial.getCategory()) : setColorClassName(\"\");\r\n        isSpecial ? setMoreTitle('\\n' + isSpecial.getCategory()) : setMoreTitle(\"\");\r\n        if(isSpecial){\r\n            console.log(isSpecial);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className={\"day\"+(anotherMonth? \" pastMonth\" : \"\")+colorClassName} onClick={() => anotherMonth? null : onClick(day)} title={day.greg().toDateString().substring(4)+\" \"+day.toString(isHebrew?\"h\":null)+moreTitle}>\r\n            <span class=\"dayDate\">{showDay}</span><span class=\"dayDate\">{day.greg().getDate()}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Day;","import { useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { ReactJewishDatePicker } from \"react-jewish-datepicker\";\r\nimport Parse from 'parse';\r\nimport Hebcal from \"hebcal\";\r\n\r\nfunction AddDate(props) {\r\n    const {show ,setShow, initialDate, hebDate} = props;\r\n    const [dateDetails, setDateDetails] = useState(\"\");\r\n    const [dateToAdd, setDateToAdd] = useState(initialDate);\r\n    const [dateCategory, setDateCategory] = useState('other');\r\n\r\n\r\n\r\n\r\n    function addDate() {\r\n        let choosedDate = dateToAdd;\r\n        let hebChoosedDate = new Hebcal.HDate(dateToAdd);\r\n        choosedDate.setHours(2,0,0,1000);\r\n        const date = Parse.Object.extend('date');\r\n        const myNewObject = new date();\r\n        myNewObject.set('pickeDate', choosedDate);\r\n        myNewObject.set('userId', Parse.User.current());\r\n        myNewObject.set('dateCategory', dateCategory);\r\n        myNewObject.set('details', dateDetails);\r\n        myNewObject.set('day', hebChoosedDate.getDate());\r\n        myNewObject.set('month', hebChoosedDate.getMonth());\r\n        myNewObject.set('year', hebChoosedDate.getFullYear());\r\n\r\n        myNewObject.save().then(\r\n            (result) => {\r\n                if (typeof document !== 'undefined') alert(`נוצר תאריך חדש!`);\r\n                    console.log('date created', result);\r\n                },\r\n                (error) => {\r\n                    if (typeof document !== 'undefined') alert(`אוי לא, משהו קרה :( נסי להזין תאריך חדש ליומן)`);\r\n                        console.error('Error while creating date: ', error);\r\n                }\r\n        ); \r\n\r\n        if(dateCategory === 'v'){\r\n            let additionDate = dateToAdd;\r\n            let hebAdditionDate = new Hebcal.HDate(dateToAdd);\r\n            hebAdditionDate.setDate(hebAdditionDate.getDate()+29);\r\n            additionDate = hebAdditionDate.greg();\r\n            additionDate.setHours(2,0,0,1000);\r\n            const date = Parse.Object.extend('date');\r\n            const myNewObject = new date();\r\n\r\n            myNewObject.set('pickeDate', additionDate);\r\n            myNewObject.set('userId', Parse.User.current());\r\n            myNewObject.set('dateCategory', 'p');\r\n            myNewObject.set('details', dateDetails);\r\n            myNewObject.set('day', hebAdditionDate.getDate());\r\n            myNewObject.set('month', hebAdditionDate.getMonth());\r\n            myNewObject.set('year', hebAdditionDate.getFullYear());\r\n    \r\n            myNewObject.save().then(\r\n                (result) => {\r\n                    if (typeof document !== 'undefined')\r\n                        console.log('date created', result);\r\n                    },\r\n                    (error) => {\r\n                        if (typeof document !== 'undefined') alert(`אוי לא, משהו קרה :( נסי להזין תאריך חדש ליומן)`);\r\n                            console.error('Error while creating date: ', error);\r\n                    }\r\n            );\r\n        }\r\n\r\n        if(dateCategory === 'h'){\r\n            let additionDate = dateToAdd;\r\n            let hebAdditionDate = new Hebcal.HDate(dateToAdd);\r\n            hebAdditionDate.setDate(hebAdditionDate.getDate()+6);\r\n            additionDate = hebAdditionDate.greg();\r\n            additionDate.setHours(2,0,0,1000);\r\n            const date = Parse.Object.extend('date');\r\n            const myNewObject = new date();\r\n   \r\n            myNewObject.set('pickeDate', additionDate);\r\n            myNewObject.set('userId', Parse.User.current());\r\n            myNewObject.set('dateCategory', 'm');\r\n            myNewObject.set('details', dateDetails);\r\n            myNewObject.set('day', hebAdditionDate.getDate());\r\n            myNewObject.set('month', hebAdditionDate.getMonth());\r\n            myNewObject.set('year', hebAdditionDate.getFullYear());\r\n    \r\n            myNewObject.save().then(\r\n                (result) => {\r\n                    if (typeof document !== 'undefined')\r\n                        console.log('date created', result);\r\n                    },\r\n                    (error) => {\r\n                        if (typeof document !== 'undefined') alert(`אוי לא, משהו קרה :( נסי להזין תאריך חדש ליומן)`);\r\n                            console.error('Error while creating date: ', error);\r\n                    }\r\n            );\r\n        }\r\n\r\n        setShow(false);\r\n    }\r\n\r\n    return(\r\n        <Modal size=\"lg\" centered show={show} onHide={()=> setShow(false)}>\r\n                <Modal.Header>\r\n                    <Modal.Title>הוסיפי תאריך חדש</Modal.Title>\r\n                </Modal.Header>\r\n            \r\n                <Modal.Body>\r\n                    <p>לחצי על התאריך לשינוי.</p>\r\n                    <p>והוסיפי תיאור/פירוט לתאריך.</p>\r\n                </Modal.Body>\r\n\r\n                <ReactJewishDatePicker\r\n                    value={initialDate}\r\n                    isHebrew\r\n                    onClick={(day) => {\r\n                        setDateToAdd(day.date);\r\n                    }}\r\n                    className=\"rjp\"/>\r\n                \r\n                <Modal.Dialog>\r\n                <Form.Control as=\"select\" value={dateCategory} custom onChange={(e)=> setDateCategory(e.target.value)}>\r\n                        <option value='other'>אחר</option>\r\n                        <option value='bthDay'>יום הולדת</option>\r\n                        <option value='v'>וסת</option>\r\n                        <option value='m'>מקוה</option>\r\n                        <option value='h'>הפסק</option>\r\n                    </Form.Control>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>תיאור/פירוט התאריך:</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} cols={100} value={dateDetails} onChange={(e) => setDateDetails(e.target.value)}/>\r\n                    </Form.Group>\r\n                </Modal.Dialog>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={()=> setShow(false)}>ביטול</Button>\r\n                    <Button variant=\"primary\" onClick={()=> addDate()}>הוסף ליומן</Button>\r\n                </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default AddDate;","import * as React from 'react';\r\n\r\nfunction Weekday(props) {\r\n\r\n    return (\r\n        <div className=\"weekday\" >\r\n            <div>א</div>\r\n            <div>ב</div>\r\n            <div>ג</div>\r\n            <div>ד</div>\r\n            <div>ה</div>\r\n            <div>ו</div>\r\n            <div>ש</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weekday;\r\n","import Parse from 'parse';\r\nimport { useEffect, useState } from \"react\";\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport Hebcal from 'hebcal';\r\nimport Day from \"./Day\";\r\nimport AddDate from \"../AddDate/AddDate\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\nimport gematriya from 'gematriya';\r\nimport DateObj from '../../models/DateObj';\r\nimport Weekday from './Weekday';\r\n\r\n\r\nfunction Calendar(){\r\n\r\n    const isHebrew = false;\r\n    const [initDate, setInitDate] = useState(new Hebcal.HDate(new Date()));\r\n    const [monthDays, setMonthDays] = useState([]);\r\n    const [showAddNewDate, setShowAddNewDate] = useState(false);\r\n    const [addDateInit, setAddDateInit] = useState(new Date());\r\n    const [specialDates, setSpecialDates] = useState([]);\r\n\r\n    const date = Parse.Object.extend('date');\r\n    const query = new Parse.Query(date);\r\n    const month = initDate.getMonth();\r\n    const year = initDate.getFullYear();\r\n    query.equalTo(\"userId\", Parse.User.current());\r\n    query.equalTo(\"month\", month);\r\n    query.equalTo(\"year\", year);\r\n    \r\n    useEffect(()=>{\r\n        query.find().then((results) => {\r\n            console.log(results);\r\n            const spDates = results.map((day) => new DateObj(day));\r\n            setSpecialDates(spDates);\r\n            \r\n\r\n            }, (error) => {\r\n                console.error(error);\r\n                setDays();\r\n\r\n            });\r\n    },[initDate]);\r\n\r\n\r\n    useEffect(()=>{\r\n        let newD = initDate.greg();\r\n        newD.setHours(new Date().getHours());\r\n        setInitDate(new Hebcal.HDate(newD));\r\n    },[showAddNewDate]);\r\n\r\n    useEffect(()=>{\r\n        setDays();\r\n\r\n    },[specialDates]);\r\n\r\n\r\n    const gematria = {\r\n        1: \"א\", \r\n        2: \"ב\",\r\n        3: \"ג\",\r\n        4: \"ד\",\r\n        5: \"ה\",\r\n        6: \"ו\",\r\n        7: \"ז\",\r\n        8: \"ח\",\r\n        9: \"ט\",\r\n        10: \"י\",\r\n        20: \"כ\",\r\n        30: \"ל\",\r\n        40: \"מ\",\r\n        50: \"נ\",\r\n        60: \"ס\",\r\n        70: \"ע\",\r\n        80: \"פ\",\r\n        90: \"צ\",\r\n        700: \"ש\",\r\n        800: \"ת\"\r\n    }\r\n\r\n    const translator = {\r\n        0: \"\",\r\n        1: \"א\", \r\n        2: \"ב\",\r\n        3: \"ג\",\r\n        4: \"ד\",\r\n        5: \"ה\",\r\n        6: \"ו\",\r\n        7: \"ז\",\r\n        8: \"ח\",\r\n        9: \"ט\",\r\n        10: \"י\",\r\n        11: \"יא\",\r\n        12: \"יב\",\r\n        13: \"יג\",\r\n        14: \"יד\",\r\n        15: \"טו\",\r\n        16: \"טז\",\r\n        17: \"יז\",\r\n        18: \"יח\",\r\n        19: \"יט\",\r\n        20: \"כ\",\r\n        21: \"כא\",\r\n        22: \"כב\",\r\n        23: \"כג\",\r\n        24: \"כד\",\r\n        25: \"כה\",\r\n        26: \"כו\",\r\n        27: \"כז\",\r\n        28: \"כח\",\r\n        29: \"כט\",\r\n        30: \"ל\"\r\n      }   \r\n\r\n    function setDays(){\r\n        let firstOfMonth =  new Hebcal.HDate(1, initDate.getMonth(), initDate.getFullYear());\r\n        let daysInMonth = firstOfMonth.daysInMonth();\r\n        let firstOfMonthOffset = firstOfMonth.getDay();\r\n        let lastOfMonthOffset = 6-Hebcal.HDate(daysInMonth, firstOfMonth.getMonth()).getDay();\r\n        let month = [];\r\n        let daysAtMonth = [];\r\n        let tempDay = firstOfMonth;\r\n        for(let i=1; i<=firstOfMonthOffset+1; i++){\r\n            tempDay = tempDay.prev();\r\n        }\r\n        for(let i=1; i <= daysInMonth + firstOfMonthOffset + lastOfMonthOffset; i++){\r\n            tempDay = tempDay.next();\r\n            month.push(tempDay);\r\n        }\r\n        daysAtMonth = month.map((day, index) => <Day key={index} special={specialDates} day={day} isHebrew={true} translator={translator} onClick={setAddDate} anotherMonth={index<firstOfMonthOffset? true : index>(daysInMonth+firstOfMonthOffset-1)? true : false}/>);\r\n        setMonthDays(daysAtMonth);\r\n    }\r\n\r\n    function setAddDate(day) {\r\n        setAddDateInit(day);\r\n        setShowAddNewDate(true);\r\n    }\r\n\r\n    function convertToHebrew (yearNum){\r\n        let quotient = yearNum / 1000;     //This will give me 5\r\n        let remainder = yearNum % 1000;    //This will give me the rest\r\n        let quotient1 = remainder/ 100;     //This will give me 7 or 8 (because i assume that user won't get so far than 100 years back\\for-wards)\r\n        let remainder1 = remainder % 100;    //This will give me the rest\r\n        let quotient2 = remainder1 / 10;     //This will give me the 10's\r\n        let remainder2 = remainder1 % 10;    //This will give me the rest\r\n        let quotient3 = remainder2;     //This will give me the 1's\r\n\r\n        let str= \"ת\";\r\n        str += gematria[Math.floor(quotient1)*100];\r\n        quotient3===0 ? str += \"'\" : str +=\"\";\r\n        str += gematria[Math.floor(quotient2)*10];\r\n        quotient3===0 ? str+=\"\" : str += \"'\" + gematria[Math.floor(quotient3)];\r\n        return(str);\r\n        \r\n    }\r\n\r\n    return(\r\n        <Container className=\"calendar-c\">\r\n            <div>    \r\n                <Form.Label>לשינוי חודש ושנה בחרי מהרשימה</Form.Label>\r\n                <Form.Control as=\"select\" value={initDate.getMonth()} custom onChange={(e)=> setInitDate( new Hebcal.HDate(initDate.getDate(),parseInt(e.target.value),(initDate.getFullYear())))}>\r\n                        <option value={7}>תשרי</option>\r\n                        <option value={8}>חשוון</option>\r\n                        <option value={9}>כסליו</option>\r\n                        <option value={10}>טבת</option>\r\n                        <option value={11}>שבט</option>\r\n                        <option value={12}>אדר</option>\r\n                        {Hebcal(initDate.getFullYear()).isLeapYear()? <option value={13}>אדר ב</option> : null }\r\n                        <option value={1}>ניסן</option>\r\n                        <option value={2}>אייר</option>\r\n                        <option value={3}>סיוון</option>\r\n                        <option value={4}>תמוז</option>\r\n                        <option value={5}>אב</option>\r\n                        <option value={6}>אלול</option>\r\n                    </Form.Control>\r\n                    <Form.Control as=\"select\" value={'0'} custom onChange={(e)=> setInitDate( new Hebcal.HDate(initDate.getDate(),initDate.getMonth(),(initDate.getFullYear()+parseInt(e.target.value))))}>\r\n                        <option value={'-2'}>{convertToHebrew(initDate.getYearObject().prev().prev().year)}</option>\r\n                        <option value={'-1'}>{convertToHebrew(initDate.getYearObject().prev().year)}</option>\r\n                        <option value={'0'}>{convertToHebrew(initDate.getFullYear())}</option>\r\n                        <option value={'1'}>{convertToHebrew(initDate.getYearObject().next().year)}</option>\r\n                        <option value={'2'}>{convertToHebrew(initDate.getYearObject().next().next().year)}</option>\r\n                    </Form.Control>\r\n            </div>\r\n            <Weekday />\r\n            <div className={`month`}>\r\n                {monthDays} \r\n            {showAddNewDate ? <AddDate show={showAddNewDate} setShow={setShowAddNewDate} initialDate={addDateInit.greg()} hebDate={addDateInit}/> : null}\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Calendar;","import { Button, Container } from \"react-bootstrap\";\r\nimport './UserHomePage.css';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Calendar from \"../../components/Calendar/Calendar\";\r\nimport AddDate from \"../../components/AddDate/AddDate\";\r\n\r\nfunction UserHomePage(props) {\r\n    \r\n    const {activeUser} = props;\r\n    const [showAddNewDate, setShowAddNewDate] = useState(false);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    return(\r\n        <div className=\"u-home-pg\">\r\n            \r\n            <Container>\r\n                <Button type=\"button\" variant=\"outline-info\" onClick={()=>setShowAddNewDate(true)}>+</Button>\r\n                <Calendar />\r\n            </Container>\r\n\r\n            <AddDate show={showAddNewDate} setShow={setShowAddNewDate} initialDate={new Date()}/>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default UserHomePage;","import { useState } from \"react\";\r\nimport './LoginPage.css';\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport UserObj from \"../../models/UserObj\";\r\nimport Parse from 'parse';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nfunction LoginPage(props) {\r\n\r\n    const {onLogin} = props;\r\n    const [userEmail, setUserEmail] = useState(\"\");\r\n    const [userPswd, setUserPswd] = useState(\"\");\r\n    const [redirecTo, setRedirecTo] = useState(false);\r\n\r\n    async function UserLogin(){\r\n\r\n        try {\r\n            const parseUser = await Parse.User.logIn(userEmail, userPswd);\r\n            // Trigger onLogin event prop + update redirect state so we will redirect to recipes page\r\n            onLogin(new UserObj(parseUser));\r\n            setRedirecTo(true);\r\n        } catch(error) {\r\n            // show an error alert\r\n            alert('Error while logging in user', error);\r\n        }\r\n\r\n    }\r\n\r\n    if (redirecTo)\r\n        return <Redirect to=\"/\"/>\r\n\r\n    return(\r\n        <div className=\"login-pg\">\r\n            <Container>\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control value={userEmail} type=\"email\" placeholder=\"Enter email\" onChange={(e) => setUserEmail(e.target.value)} />\r\n                        <Form.Text className=\"text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control value={userPswd} type=\"password\" placeholder=\"Password\" onChange={(e) => setUserPswd(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"button\" onClick={()=> UserLogin()}>\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import './App.css';\nimport Parse from 'parse';\nimport { useState } from 'react';\nimport UserObj from './models/UserObj';\nimport Switch from 'react-bootstrap/esm/Switch';\nimport HomePage from './pages/HomePage/HomePage';\nimport { HashRouter, Route } from 'react-router-dom';\nimport DatesPage from './pages/DatesPage/DatesPage';\nimport ProfilePage from './pages/ProfilePage/ProfilePage';\nimport UserHomePage from './pages/UserHomePage/UserHomePage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Jumbotron } from 'react-bootstrap';\nimport AppNavbar from './components/NavBar/AppNavbar';\n\nfunction App() {\n\n  const [activeUser, setActiveUser] = useState(\n    Parse.User.current() ? new UserObj(Parse.User.current()) : null);   // During development it's conveient to be logged in by default \n  \n  function handleLogout() {\n    setActiveUser(null);\n    Parse.User.logOut();\n  }\n\n  function handleLogin(loggedinUser) {\n    setActiveUser(loggedinUser);\n  }\n\n  return (\n    <div className=\"AppMain\">\n      <Jumbotron>\n        <Container>\n            <h1>You</h1>\n            \n        </Container>\n      </Jumbotron>\n        <Container>\n            <AppNavbar activeUser={activeUser} onLogout={handleLogout}/>\n        </Container>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\"><HomePage activeUser={activeUser}/></Route>\n          <Route exact path=\"/UserHome\"><UserHomePage activeUser={activeUser}/></Route>\n          <Route exact path=\"/login\"><LoginPage activeUser={activeUser} onLogin={handleLogin}/></Route>\n          <Route exact path=\"/dates\"><DatesPage activeUser={activeUser}/></Route>\n          <Route exact path=\"/profile\"><ProfilePage activeUser={activeUser} /></Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Parse from 'parse';\n\nParse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\nParse.initialize(\n  'FRZklTDYcQhNItVaX3Gz3vaTJmBLLFWUv4rJJ1dY', // This is your Application ID\n  'IboXQLNaP6F0nla3JzwdKk861oA18Z3kK3lJKCIL', // This is your Javascript key\n);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}